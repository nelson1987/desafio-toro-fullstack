version: '3.7'
services:
#https://henriquemauri.net/centralizando-logs-com-elastic-stack-e-net-parte-4-kibana/
#https://www.dotnetcurry.com/aspnet/1354/elastic-search-kibana-in-docker-dotnet-core-app
#      
  kibana:
    container_name: kibana
    image: kibana:8.8.1
    ports:
      - "5601:5601"
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#    depends_on:
#      - elasticsearch
#    network:
#      - api-network
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.8.1
    ports:
      - "9200:9200"
      - "9300:9300"
#    environment:
#      discovery.type: "single-node"
#      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
#      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
#      xpack.monitoring.enabled: "true"
#    volumes:
#      - ./esdata:/usr/share/elasticsearch/data
#    network:
#      - api-network

##https://hub.docker.com/_/mongo
##https://renatogroffe.medium.com/mongodb-mongo-express-docker-compose-montando-rapidamente-um-ambiente-para-uso-824f25ca6957
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: mongo
#      MONGO_INITDB_ROOT_PASSWORD: mongo1A2b3C
#
  mongo-express:
    container_name: express
    image: mongo-express
    ports:
      - "8081:8081"
#    restart: always
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#      # ME_CONFIG_BASICAUTH_USERNAME: "renatogroffe"
#      # ME_CONFIG_BASICAUTH_PASSWORD: "MongoExpress2019!"
#
#  #rabbit:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
#      environment:
#        - RABBITMQ_DEFAULT_USER=guest
#        - RABBITMQ_DEFAULT_PASS=guest
##docker run --rm -d -p 443:443/tcp -p 80:80/tcp api:latest
##docker run -p 80:8080 -e SWAGGER_JSON=/foo/allAPI-swagger.json -v /${doc-path}/:/foo swaggerapi/swagger-ui
  api:
    container_name: webapi
    image: api
    ports:
      - "8000:80"
#    build:
#      context: .
#  #oracle:
#  #redis:
#  #api

    # networks:
    #   - api-network
  #app
#networks: 
#  api-network:
#    driver: bridge
#volumes:
#  esdata:
#    driver: local
  # data:
  #   driver: local
